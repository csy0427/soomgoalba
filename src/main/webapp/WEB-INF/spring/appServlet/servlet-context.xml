<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.mycompany.myapp06.**.controller" />

	<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<beans:property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<beans:property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
		<beans:property name="username" value="scott"/>
		<beans:property name="password" value="TIGER"/>
	</beans:bean>
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource"/>
		<beans:property name="configLocation" value="classpath:mybatis-config.xml"/>
	</beans:bean>
	<beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg ref="sqlSessionFactory"/>
	</beans:bean>
	<!--  이 방식보단 annotation 방식 권장 
	<beans:bean id="testAop" class="com.mycompany.myapp06.common.service.AroundLog"/>
	<aop:config>
		<aop:aspect id="testAspect" ref="testAop">
			<aop:before method="beforeLog" pointcut="execution(public * com.mycompany.myapp06..*Service.get*(..))"/>
			<aop:before method="beforeLog" pointcut="execution(public * com.mycompany.myapp06..*Controller.*(..))"/>
			<aop:after-returning returning="ro" method="afterReturningLog" pointcut="execution(public * com.mycompany.myapp06..*Service.get*(..))"/>
			<aop:after-returning returning="ro" method="afterReturningLog" pointcut="execution(public * com.mycompany.myapp06..*Service.*(..))"/>
			<aop:around method="aroundLog" pointcut="execution(public * com.mycompany.myapp06..*Dao.*(..))"/>
		</aop:aspect>	
	</aop:config>
	 -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	
	<!-- 
	<beans:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource"></beans:property>
	</beans:bean>
	transaction 등록하기
	transactionManager 라는 이름(id)은 바꿀수없다 이것은 약속
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
	<tx:attributes> 
		select문 
		<tx:method name="get*" rollback-for="Exception" read-only="true"/>
		<tx:method name="insert*" rollback-for="Exception" />
		<tx:method name="update*" rollback-for="Exception" />
		<tx:method name="delete*" rollback-for="Exception" />
	</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="commonServiceTxPc" expression="execution(public * com.mycompany.myapp06..*Impl.*(..))"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="commonServiceTxPc"/>
	</aop:config>
	 -->
	<tx:annotation-driven/>
	
	
	
	
</beans:beans>
